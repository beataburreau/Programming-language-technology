-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from CMM/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pDef -> Def                                 (1)
	%start_pListDef -> ListDef                         (2)
	%start_pArg -> Arg                                 (3)
	%start_pListArg -> ListArg                         (4)
	%start_pStm -> Stm                                 (5)
	%start_pListStm -> ListStm                         (6)
	%start_pExp6 -> Exp6                               (7)
	%start_pExp5 -> Exp5                               (8)
	%start_pExp4 -> Exp4                               (9)
	%start_pExp3 -> Exp3                               (10)
	%start_pExp2 -> Exp2                               (11)
	%start_pExp1 -> Exp1                               (12)
	%start_pExp -> Exp                                 (13)
	%start_pListExp -> ListExp                         (14)
	%start_pIncDecOp -> IncDecOp                       (15)
	%start_pMulOp -> MulOp                             (16)
	%start_pAddOp -> AddOp                             (17)
	%start_pCmpOp -> CmpOp                             (18)
	%start_pBoolLit -> BoolLit                         (19)
	%start_pType -> Type                               (20)
	%start_pListId -> ListId                           (21)
	Integer -> L_integ                                 (22)
	Double -> L_doubl                                  (23)
	Id -> L_Id                                         (24)
	Program -> ListDef                                 (25)
	Def -> Type Id '(' ListArg ')' '{' ListStm '}'     (26)
	ListDef ->                                         (27)
	ListDef -> Def ListDef                             (28)
	Arg -> Type Id                                     (29)
	ListArg ->                                         (30)
	ListArg -> Arg                                     (31)
	ListArg -> Arg ',' ListArg                         (32)
	Stm -> Exp ';'                                     (33)
	Stm -> Type ListId ';'                             (34)
	Stm -> Type Id '=' Exp ';'                         (35)
	Stm -> 'return' Exp ';'                            (36)
	Stm -> 'while' '(' Exp ')' Stm                     (37)
	Stm -> '{' ListStm '}'                             (38)
	Stm -> 'if' '(' Exp ')' Stm 'else' Stm             (39)
	ListStm ->                                         (40)
	ListStm -> Stm ListStm                             (41)
	Exp6 -> BoolLit                                    (42)
	Exp6 -> Integer                                    (43)
	Exp6 -> Double                                     (44)
	Exp6 -> Id                                         (45)
	Exp6 -> Id '(' ListExp ')'                         (46)
	Exp6 -> Id IncDecOp                                (47)
	Exp6 -> IncDecOp Id                                (48)
	Exp6 -> '(' Exp ')'                                (49)
	Exp5 -> Exp5 MulOp Exp6                            (50)
	Exp5 -> Exp6                                       (51)
	Exp4 -> Exp4 AddOp Exp5                            (52)
	Exp4 -> Exp5                                       (53)
	Exp3 -> Exp4 CmpOp Exp4                            (54)
	Exp3 -> Exp4                                       (55)
	Exp2 -> Exp2 '&&' Exp3                             (56)
	Exp2 -> Exp3                                       (57)
	Exp1 -> Exp1 '||' Exp2                             (58)
	Exp1 -> Exp2                                       (59)
	Exp -> Id '=' Exp                                  (60)
	Exp -> Exp1                                        (61)
	ListExp ->                                         (62)
	ListExp -> Exp                                     (63)
	ListExp -> Exp ',' ListExp                         (64)
	IncDecOp -> '++'                                   (65)
	IncDecOp -> '--'                                   (66)
	MulOp -> '*'                                       (67)
	MulOp -> '/'                                       (68)
	AddOp -> '+'                                       (69)
	AddOp -> '-'                                       (70)
	CmpOp -> '<'                                       (71)
	CmpOp -> '>'                                       (72)
	CmpOp -> '<='                                      (73)
	CmpOp -> '>='                                      (74)
	CmpOp -> '=='                                      (75)
	CmpOp -> '!='                                      (76)
	BoolLit -> 'true'                                  (77)
	BoolLit -> 'false'                                 (78)
	Type -> 'bool'                                     (79)
	Type -> 'int'                                      (80)
	Type -> 'double'                                   (81)
	Type -> 'void'                                     (82)
	ListId -> Id                                       (83)
	ListId -> Id ',' ListId                            (84)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!='           { PT _ (TS _ 1) }
	'&&'           { PT _ (TS _ 2) }
	'('            { PT _ (TS _ 3) }
	')'            { PT _ (TS _ 4) }
	'*'            { PT _ (TS _ 5) }
	'+'            { PT _ (TS _ 6) }
	'++'           { PT _ (TS _ 7) }
	','            { PT _ (TS _ 8) }
	'-'            { PT _ (TS _ 9) }
	'--'           { PT _ (TS _ 10) }
	'/'            { PT _ (TS _ 11) }
	';'            { PT _ (TS _ 12) }
	'<'            { PT _ (TS _ 13) }
	'<='           { PT _ (TS _ 14) }
	'='            { PT _ (TS _ 15) }
	'=='           { PT _ (TS _ 16) }
	'>'            { PT _ (TS _ 17) }
	'>='           { PT _ (TS _ 18) }
	'bool'         { PT _ (TS _ 19) }
	'double'       { PT _ (TS _ 20) }
	'else'         { PT _ (TS _ 21) }
	'false'        { PT _ (TS _ 22) }
	'if'           { PT _ (TS _ 23) }
	'int'          { PT _ (TS _ 24) }
	'return'       { PT _ (TS _ 25) }
	'true'         { PT _ (TS _ 26) }
	'void'         { PT _ (TS _ 27) }
	'while'        { PT _ (TS _ 28) }
	'{'            { PT _ (TS _ 29) }
	'||'           { PT _ (TS _ 30) }
	'}'            { PT _ (TS _ 31) }
	L_integ        { PT _ (TI $$) }
	L_doubl        { PT _ (TD $$) }
	L_Id           { PT _ (T_Id $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pDef     rule  1
	%start_pListDef rule  2
	%start_pArg     rule  3
	%start_pListArg rule  4
	%start_pStm     rule  5
	%start_pListStm rule  6
	%start_pExp6    rule  7
	%start_pExp5    rule  8
	%start_pExp4    rule  9
	%start_pExp3    rule  10
	%start_pExp2    rule  11
	%start_pExp1    rule  12
	%start_pExp     rule  13
	%start_pListExp rule  14
	%start_pIncDecOp rule  15
	%start_pMulOp   rule  16
	%start_pAddOp   rule  17
	%start_pCmpOp   rule  18
	%start_pBoolLit rule  19
	%start_pType    rule  20
	%start_pListId  rule  21
	Integer         rule  22
	Double          rule  23
	Id              rule  24
	Program         rule  25
	Def             rule  26
	ListDef         rules 27, 28
	Arg             rule  29
	ListArg         rules 30, 31, 32
	Stm             rules 33, 34, 35, 36, 37, 38, 39
	ListStm         rules 40, 41
	Exp6            rules 42, 43, 44, 45, 46, 47, 48, 49
	Exp5            rules 50, 51
	Exp4            rules 52, 53
	Exp3            rules 54, 55
	Exp2            rules 56, 57
	Exp1            rules 58, 59
	Exp             rules 60, 61
	ListExp         rules 62, 63, 64
	IncDecOp        rules 65, 66
	MulOp           rules 67, 68
	AddOp           rules 69, 70
	CmpOp           rules 71, 72, 73, 74, 75, 76
	BoolLit         rules 77, 78
	Type            rules 79, 80, 81, 82
	ListId          rules 83, 84

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'int'          shift, and enter state 30
	'void'         shift, and enter state 31
	%eof           reduce using rule 27

	Program        goto state 91
	Def            goto state 87
	ListDef        goto state 92
	Type           goto state 89

State 1


	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'int'          shift, and enter state 30
	'void'         shift, and enter state 31

	Def            goto state 90
	Type           goto state 89

State 2


	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'int'          shift, and enter state 30
	'void'         shift, and enter state 31
	%eof           reduce using rule 27

	Def            goto state 87
	ListDef        goto state 88
	Type           goto state 89

State 3


	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'int'          shift, and enter state 30
	'void'         shift, and enter state 31

	Arg            goto state 86
	Type           goto state 85

State 4


	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'int'          shift, and enter state 30
	'void'         shift, and enter state 31
	%eof           reduce using rule 30

	Arg            goto state 83
	ListArg        goto state 84
	Type           goto state 85

State 5


	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'false'        shift, and enter state 33
	'if'           shift, and enter state 78
	'int'          shift, and enter state 30
	'return'       shift, and enter state 79
	'true'         shift, and enter state 34
	'void'         shift, and enter state 31
	'while'        shift, and enter state 80
	'{'            shift, and enter state 81
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Stm            goto state 82
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 76
	IncDecOp       goto state 62
	BoolLit        goto state 63
	Type           goto state 77

State 6


	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'false'        shift, and enter state 33
	'if'           shift, and enter state 78
	'int'          shift, and enter state 30
	'return'       shift, and enter state 79
	'true'         shift, and enter state 34
	'void'         shift, and enter state 31
	'while'        shift, and enter state 80
	'{'            shift, and enter state 81
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26
	%eof           reduce using rule 40

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Stm            goto state 74
	ListStm        goto state 75
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 76
	IncDecOp       goto state 62
	BoolLit        goto state 63
	Type           goto state 77

State 7


	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 67
	Exp6           goto state 73
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 8


	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 67
	Exp6           goto state 54
	Exp5           goto state 72
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 9


	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 67
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 71
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 10


	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 67
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 70
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 11


	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 67
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 69
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 12


	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 67
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 68
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 13


	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 66
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 14


	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26
	%eof           reduce using rule 62

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 60
	ListExp        goto state 61
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 15


	'++'           shift, and enter state 49
	'--'           shift, and enter state 50

	IncDecOp       goto state 48

State 16


	'*'            shift, and enter state 46
	'/'            shift, and enter state 47

	MulOp          goto state 45

State 17


	'+'            shift, and enter state 43
	'-'            shift, and enter state 44

	AddOp          goto state 42

State 18


	'!='           shift, and enter state 36
	'<'            shift, and enter state 37
	'<='           shift, and enter state 38
	'=='           shift, and enter state 39
	'>'            shift, and enter state 40
	'>='           shift, and enter state 41

	CmpOp          goto state 35

State 19


	'false'        shift, and enter state 33
	'true'         shift, and enter state 34

	BoolLit        goto state 32

State 20


	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'int'          shift, and enter state 30
	'void'         shift, and enter state 31

	Type           goto state 27

State 21


	L_Id           shift, and enter state 26

	Id             goto state 24
	ListId         goto state 25

State 22


	L_integ        shift, and enter state 23


State 23

	Integer -> L_integ .                                (rule 22)

	'!='           reduce using rule 22
	'&&'           reduce using rule 22
	')'            reduce using rule 22
	'*'            reduce using rule 22
	'+'            reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	'/'            reduce using rule 22
	';'            reduce using rule 22
	'<'            reduce using rule 22
	'<='           reduce using rule 22
	'=='           reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	'||'           reduce using rule 22
	%eof           reduce using rule 22


State 24

	ListId -> Id .                                      (rule 83)
	ListId -> Id . ',' ListId                           (rule 84)

	','            shift, and enter state 116
	';'            reduce using rule 83
	%eof           reduce using rule 83


State 25

	%start_pListId -> ListId .                          (rule 21)

	%eof           accept


State 26

	Id -> L_Id .                                        (rule 24)

	'!='           reduce using rule 24
	'&&'           reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	'+'            reduce using rule 24
	'++'           reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'--'           reduce using rule 24
	'/'            reduce using rule 24
	';'            reduce using rule 24
	'<'            reduce using rule 24
	'<='           reduce using rule 24
	'='            reduce using rule 24
	'=='           reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	'||'           reduce using rule 24
	%eof           reduce using rule 24


State 27

	%start_pType -> Type .                              (rule 20)

	%eof           accept


State 28

	Type -> 'bool' .                                    (rule 79)

	L_Id           reduce using rule 79
	%eof           reduce using rule 79


State 29

	Type -> 'double' .                                  (rule 81)

	L_Id           reduce using rule 81
	%eof           reduce using rule 81


State 30

	Type -> 'int' .                                     (rule 80)

	L_Id           reduce using rule 80
	%eof           reduce using rule 80


State 31

	Type -> 'void' .                                    (rule 82)

	L_Id           reduce using rule 82
	%eof           reduce using rule 82


State 32

	%start_pBoolLit -> BoolLit .                        (rule 19)

	%eof           accept


State 33

	BoolLit -> 'false' .                                (rule 78)

	'!='           reduce using rule 78
	'&&'           reduce using rule 78
	')'            reduce using rule 78
	'*'            reduce using rule 78
	'+'            reduce using rule 78
	','            reduce using rule 78
	'-'            reduce using rule 78
	'/'            reduce using rule 78
	';'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	'||'           reduce using rule 78
	%eof           reduce using rule 78


State 34

	BoolLit -> 'true' .                                 (rule 77)

	'!='           reduce using rule 77
	'&&'           reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	'+'            reduce using rule 77
	','            reduce using rule 77
	'-'            reduce using rule 77
	'/'            reduce using rule 77
	';'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	'||'           reduce using rule 77
	%eof           reduce using rule 77


State 35

	%start_pCmpOp -> CmpOp .                            (rule 18)

	%eof           accept


State 36

	CmpOp -> '!=' .                                     (rule 76)

	'('            reduce using rule 76
	'++'           reduce using rule 76
	'--'           reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	L_integ        reduce using rule 76
	L_doubl        reduce using rule 76
	L_Id           reduce using rule 76
	%eof           reduce using rule 76


State 37

	CmpOp -> '<' .                                      (rule 71)

	'('            reduce using rule 71
	'++'           reduce using rule 71
	'--'           reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_integ        reduce using rule 71
	L_doubl        reduce using rule 71
	L_Id           reduce using rule 71
	%eof           reduce using rule 71


State 38

	CmpOp -> '<=' .                                     (rule 73)

	'('            reduce using rule 73
	'++'           reduce using rule 73
	'--'           reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_integ        reduce using rule 73
	L_doubl        reduce using rule 73
	L_Id           reduce using rule 73
	%eof           reduce using rule 73


State 39

	CmpOp -> '==' .                                     (rule 75)

	'('            reduce using rule 75
	'++'           reduce using rule 75
	'--'           reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_integ        reduce using rule 75
	L_doubl        reduce using rule 75
	L_Id           reduce using rule 75
	%eof           reduce using rule 75


State 40

	CmpOp -> '>' .                                      (rule 72)

	'('            reduce using rule 72
	'++'           reduce using rule 72
	'--'           reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_integ        reduce using rule 72
	L_doubl        reduce using rule 72
	L_Id           reduce using rule 72
	%eof           reduce using rule 72


State 41

	CmpOp -> '>=' .                                     (rule 74)

	'('            reduce using rule 74
	'++'           reduce using rule 74
	'--'           reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_integ        reduce using rule 74
	L_doubl        reduce using rule 74
	L_Id           reduce using rule 74
	%eof           reduce using rule 74


State 42

	%start_pAddOp -> AddOp .                            (rule 17)

	%eof           accept


State 43

	AddOp -> '+' .                                      (rule 69)

	'('            reduce using rule 69
	'++'           reduce using rule 69
	'--'           reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_integ        reduce using rule 69
	L_doubl        reduce using rule 69
	L_Id           reduce using rule 69
	%eof           reduce using rule 69


State 44

	AddOp -> '-' .                                      (rule 70)

	'('            reduce using rule 70
	'++'           reduce using rule 70
	'--'           reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_integ        reduce using rule 70
	L_doubl        reduce using rule 70
	L_Id           reduce using rule 70
	%eof           reduce using rule 70


State 45

	%start_pMulOp -> MulOp .                            (rule 16)

	%eof           accept


State 46

	MulOp -> '*' .                                      (rule 67)

	'('            reduce using rule 67
	'++'           reduce using rule 67
	'--'           reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_integ        reduce using rule 67
	L_doubl        reduce using rule 67
	L_Id           reduce using rule 67
	%eof           reduce using rule 67


State 47

	MulOp -> '/' .                                      (rule 68)

	'('            reduce using rule 68
	'++'           reduce using rule 68
	'--'           reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_integ        reduce using rule 68
	L_doubl        reduce using rule 68
	L_Id           reduce using rule 68
	%eof           reduce using rule 68


State 48

	%start_pIncDecOp -> IncDecOp .                      (rule 15)

	%eof           accept


State 49

	IncDecOp -> '++' .                                  (rule 65)

	'!='           reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'||'           reduce using rule 65
	L_Id           reduce using rule 65
	%eof           reduce using rule 65


State 50

	IncDecOp -> '--' .                                  (rule 66)

	'!='           reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'||'           reduce using rule 66
	L_Id           reduce using rule 66
	%eof           reduce using rule 66


State 51

	Exp6 -> Integer .                                   (rule 43)

	'!='           reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43
	%eof           reduce using rule 43


State 52

	Exp6 -> Double .                                    (rule 44)

	'!='           reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44
	%eof           reduce using rule 44


State 53

	Exp6 -> Id .                                        (rule 45)
	Exp6 -> Id . '(' ListExp ')'                        (rule 46)
	Exp6 -> Id . IncDecOp                               (rule 47)
	Exp -> Id . '=' Exp                                 (rule 60)

	'!='           reduce using rule 45
	'&&'           reduce using rule 45
	'('            shift, and enter state 110
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	'++'           shift, and enter state 49
	','            reduce using rule 45
	'-'            reduce using rule 45
	'--'           shift, and enter state 50
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'='            shift, and enter state 115
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45
	%eof           reduce using rule 45

	IncDecOp       goto state 109

State 54

	Exp5 -> Exp6 .                                      (rule 51)

	'!='           reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51
	%eof           reduce using rule 51


State 55

	Exp5 -> Exp5 . MulOp Exp6                           (rule 50)
	Exp4 -> Exp5 .                                      (rule 53)

	'!='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            shift, and enter state 46
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            shift, and enter state 47
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53
	%eof           reduce using rule 53

	MulOp          goto state 105

State 56

	Exp4 -> Exp4 . AddOp Exp5                           (rule 52)
	Exp3 -> Exp4 . CmpOp Exp4                           (rule 54)
	Exp3 -> Exp4 .                                      (rule 55)

	'!='           shift, and enter state 36
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'+'            shift, and enter state 43
	','            reduce using rule 55
	'-'            shift, and enter state 44
	';'            reduce using rule 55
	'<'            shift, and enter state 37
	'<='           shift, and enter state 38
	'=='           shift, and enter state 39
	'>'            shift, and enter state 40
	'>='           shift, and enter state 41
	'||'           reduce using rule 55
	%eof           reduce using rule 55

	AddOp          goto state 106
	CmpOp          goto state 114

State 57

	Exp2 -> Exp3 .                                      (rule 57)

	'&&'           reduce using rule 57
	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	'||'           reduce using rule 57
	%eof           reduce using rule 57


State 58

	Exp2 -> Exp2 . '&&' Exp3                            (rule 56)
	Exp1 -> Exp2 .                                      (rule 59)

	'&&'           shift, and enter state 107
	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'||'           reduce using rule 59
	%eof           reduce using rule 59


State 59

	Exp1 -> Exp1 . '||' Exp2                            (rule 58)
	Exp -> Exp1 .                                       (rule 61)

	')'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	'||'           shift, and enter state 108
	%eof           reduce using rule 61


State 60

	ListExp -> Exp .                                    (rule 63)
	ListExp -> Exp . ',' ListExp                        (rule 64)

	')'            reduce using rule 63
	','            shift, and enter state 113
	%eof           reduce using rule 63


State 61

	%start_pListExp -> ListExp .                        (rule 14)

	%eof           accept


State 62

	Exp6 -> IncDecOp . Id                               (rule 48)

	L_Id           shift, and enter state 26

	Id             goto state 112

State 63

	Exp6 -> BoolLit .                                   (rule 42)

	'!='           reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42
	%eof           reduce using rule 42


State 64

	Exp6 -> '(' . Exp ')'                               (rule 49)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 111
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 65

	Double -> L_doubl .                                 (rule 23)

	'!='           reduce using rule 23
	'&&'           reduce using rule 23
	')'            reduce using rule 23
	'*'            reduce using rule 23
	'+'            reduce using rule 23
	','            reduce using rule 23
	'-'            reduce using rule 23
	'/'            reduce using rule 23
	';'            reduce using rule 23
	'<'            reduce using rule 23
	'<='           reduce using rule 23
	'=='           reduce using rule 23
	'>'            reduce using rule 23
	'>='           reduce using rule 23
	'||'           reduce using rule 23
	%eof           reduce using rule 23


State 66

	%start_pExp -> Exp .                                (rule 13)

	%eof           accept


State 67

	Exp6 -> Id .                                        (rule 45)
	Exp6 -> Id . '(' ListExp ')'                        (rule 46)
	Exp6 -> Id . IncDecOp                               (rule 47)

	'!='           reduce using rule 45
	'&&'           reduce using rule 45
	'('            shift, and enter state 110
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	'++'           shift, and enter state 49
	','            reduce using rule 45
	'-'            reduce using rule 45
	'--'           shift, and enter state 50
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45
	%eof           reduce using rule 45

	IncDecOp       goto state 109

State 68

	%start_pExp1 -> Exp1 .                              (rule 12)
	Exp1 -> Exp1 . '||' Exp2                            (rule 58)

	'||'           shift, and enter state 108
	%eof           accept


State 69

	%start_pExp2 -> Exp2 .                              (rule 11)
	Exp2 -> Exp2 . '&&' Exp3                            (rule 56)

	'&&'           shift, and enter state 107
	%eof           accept


State 70

	%start_pExp3 -> Exp3 .                              (rule 10)

	%eof           accept


State 71

	%start_pExp4 -> Exp4 .                              (rule 9)
	Exp4 -> Exp4 . AddOp Exp5                           (rule 52)

	'+'            shift, and enter state 43
	'-'            shift, and enter state 44
	%eof           accept

	AddOp          goto state 106

State 72

	%start_pExp5 -> Exp5 .                              (rule 8)
	Exp5 -> Exp5 . MulOp Exp6                           (rule 50)

	'*'            shift, and enter state 46
	'/'            shift, and enter state 47
	%eof           accept

	MulOp          goto state 105

State 73

	%start_pExp6 -> Exp6 .                              (rule 7)

	%eof           accept


State 74

	ListStm -> Stm . ListStm                            (rule 41)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'false'        shift, and enter state 33
	'if'           shift, and enter state 78
	'int'          shift, and enter state 30
	'return'       shift, and enter state 79
	'true'         shift, and enter state 34
	'void'         shift, and enter state 31
	'while'        shift, and enter state 80
	'{'            shift, and enter state 81
	'}'            reduce using rule 40
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26
	%eof           reduce using rule 40

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Stm            goto state 74
	ListStm        goto state 104
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 76
	IncDecOp       goto state 62
	BoolLit        goto state 63
	Type           goto state 77

State 75

	%start_pListStm -> ListStm .                        (rule 6)

	%eof           accept


State 76

	Stm -> Exp . ';'                                    (rule 33)

	';'            shift, and enter state 103


State 77

	Stm -> Type . ListId ';'                            (rule 34)
	Stm -> Type . Id '=' Exp ';'                        (rule 35)

	L_Id           shift, and enter state 26

	Id             goto state 101
	ListId         goto state 102

State 78

	Stm -> 'if' . '(' Exp ')' Stm 'else' Stm            (rule 39)

	'('            shift, and enter state 100


State 79

	Stm -> 'return' . Exp ';'                           (rule 36)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 99
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 80

	Stm -> 'while' . '(' Exp ')' Stm                    (rule 37)

	'('            shift, and enter state 98


State 81

	Stm -> '{' . ListStm '}'                            (rule 38)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'false'        shift, and enter state 33
	'if'           shift, and enter state 78
	'int'          shift, and enter state 30
	'return'       shift, and enter state 79
	'true'         shift, and enter state 34
	'void'         shift, and enter state 31
	'while'        shift, and enter state 80
	'{'            shift, and enter state 81
	'}'            reduce using rule 40
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Stm            goto state 74
	ListStm        goto state 97
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 76
	IncDecOp       goto state 62
	BoolLit        goto state 63
	Type           goto state 77

State 82

	%start_pStm -> Stm .                                (rule 5)

	%eof           accept


State 83

	ListArg -> Arg .                                    (rule 31)
	ListArg -> Arg . ',' ListArg                        (rule 32)

	')'            reduce using rule 31
	','            shift, and enter state 96
	%eof           reduce using rule 31


State 84

	%start_pListArg -> ListArg .                        (rule 4)

	%eof           accept


State 85

	Arg -> Type . Id                                    (rule 29)

	L_Id           shift, and enter state 26

	Id             goto state 95

State 86

	%start_pArg -> Arg .                                (rule 3)

	%eof           accept


State 87

	ListDef -> Def . ListDef                            (rule 28)

	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'int'          shift, and enter state 30
	'void'         shift, and enter state 31
	%eof           reduce using rule 27

	Def            goto state 87
	ListDef        goto state 94
	Type           goto state 89

State 88

	%start_pListDef -> ListDef .                        (rule 2)

	%eof           accept


State 89

	Def -> Type . Id '(' ListArg ')' '{' ListStm '}'    (rule 26)

	L_Id           shift, and enter state 26

	Id             goto state 93

State 90

	%start_pDef -> Def .                                (rule 1)

	%eof           accept


State 91

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 92

	Program -> ListDef .                                (rule 25)

	%eof           reduce using rule 25


State 93

	Def -> Type Id . '(' ListArg ')' '{' ListStm '}'    (rule 26)

	'('            shift, and enter state 134


State 94

	ListDef -> Def ListDef .                            (rule 28)

	%eof           reduce using rule 28


State 95

	Arg -> Type Id .                                    (rule 29)

	')'            reduce using rule 29
	','            reduce using rule 29
	%eof           reduce using rule 29


State 96

	ListArg -> Arg ',' . ListArg                        (rule 32)

	')'            reduce using rule 30
	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'int'          shift, and enter state 30
	'void'         shift, and enter state 31
	%eof           reduce using rule 30

	Arg            goto state 83
	ListArg        goto state 133
	Type           goto state 85

State 97

	Stm -> '{' ListStm . '}'                            (rule 38)

	'}'            shift, and enter state 132


State 98

	Stm -> 'while' '(' . Exp ')' Stm                    (rule 37)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 131
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 99

	Stm -> 'return' Exp . ';'                           (rule 36)

	';'            shift, and enter state 130


State 100

	Stm -> 'if' '(' . Exp ')' Stm 'else' Stm            (rule 39)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 129
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 101

	Stm -> Type Id . '=' Exp ';'                        (rule 35)
	ListId -> Id .                                      (rule 83)
	ListId -> Id . ',' ListId                           (rule 84)

	','            shift, and enter state 116
	';'            reduce using rule 83
	'='            shift, and enter state 128


State 102

	Stm -> Type ListId . ';'                            (rule 34)

	';'            shift, and enter state 127


State 103

	Stm -> Exp ';' .                                    (rule 33)

	'('            reduce using rule 33
	'++'           reduce using rule 33
	'--'           reduce using rule 33
	'bool'         reduce using rule 33
	'double'       reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'return'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_integ        reduce using rule 33
	L_doubl        reduce using rule 33
	L_Id           reduce using rule 33
	%eof           reduce using rule 33


State 104

	ListStm -> Stm ListStm .                            (rule 41)

	'}'            reduce using rule 41
	%eof           reduce using rule 41


State 105

	Exp5 -> Exp5 MulOp . Exp6                           (rule 50)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 67
	Exp6           goto state 126
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 106

	Exp4 -> Exp4 AddOp . Exp5                           (rule 52)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 67
	Exp6           goto state 54
	Exp5           goto state 125
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 107

	Exp2 -> Exp2 '&&' . Exp3                            (rule 56)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 67
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 124
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 108

	Exp1 -> Exp1 '||' . Exp2                            (rule 58)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 67
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 123
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 109

	Exp6 -> Id IncDecOp .                               (rule 47)

	'!='           reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47
	%eof           reduce using rule 47


State 110

	Exp6 -> Id '(' . ListExp ')'                        (rule 46)

	'('            shift, and enter state 64
	')'            reduce using rule 62
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 60
	ListExp        goto state 122
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 111

	Exp6 -> '(' Exp . ')'                               (rule 49)

	')'            shift, and enter state 121


State 112

	Exp6 -> IncDecOp Id .                               (rule 48)

	'!='           reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48
	%eof           reduce using rule 48


State 113

	ListExp -> Exp ',' . ListExp                        (rule 64)

	'('            shift, and enter state 64
	')'            reduce using rule 62
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26
	%eof           reduce using rule 62

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 60
	ListExp        goto state 120
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 114

	Exp3 -> Exp4 CmpOp . Exp4                           (rule 54)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 67
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 119
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 115

	Exp -> Id '=' . Exp                                 (rule 60)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 118
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 116

	ListId -> Id ',' . ListId                           (rule 84)

	L_Id           shift, and enter state 26

	Id             goto state 24
	ListId         goto state 117

State 117

	ListId -> Id ',' ListId .                           (rule 84)

	';'            reduce using rule 84
	%eof           reduce using rule 84


State 118

	Exp -> Id '=' Exp .                                 (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	%eof           reduce using rule 60


State 119

	Exp4 -> Exp4 . AddOp Exp5                           (rule 52)
	Exp3 -> Exp4 CmpOp Exp4 .                           (rule 54)

	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'+'            shift, and enter state 43
	','            reduce using rule 54
	'-'            shift, and enter state 44
	';'            reduce using rule 54
	'||'           reduce using rule 54
	%eof           reduce using rule 54

	AddOp          goto state 106

State 120

	ListExp -> Exp ',' ListExp .                        (rule 64)

	')'            reduce using rule 64
	%eof           reduce using rule 64


State 121

	Exp6 -> '(' Exp ')' .                               (rule 49)

	'!='           reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49
	%eof           reduce using rule 49


State 122

	Exp6 -> Id '(' ListExp . ')'                        (rule 46)

	')'            shift, and enter state 139


State 123

	Exp2 -> Exp2 . '&&' Exp3                            (rule 56)
	Exp1 -> Exp1 '||' Exp2 .                            (rule 58)

	'&&'           shift, and enter state 107
	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58
	'||'           reduce using rule 58
	%eof           reduce using rule 58


State 124

	Exp2 -> Exp2 '&&' Exp3 .                            (rule 56)

	'&&'           reduce using rule 56
	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'||'           reduce using rule 56
	%eof           reduce using rule 56


State 125

	Exp5 -> Exp5 . MulOp Exp6                           (rule 50)
	Exp4 -> Exp4 AddOp Exp5 .                           (rule 52)

	'!='           reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            shift, and enter state 46
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            shift, and enter state 47
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52
	%eof           reduce using rule 52

	MulOp          goto state 105

State 126

	Exp5 -> Exp5 MulOp Exp6 .                           (rule 50)

	'!='           reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50
	%eof           reduce using rule 50


State 127

	Stm -> Type ListId ';' .                            (rule 34)

	'('            reduce using rule 34
	'++'           reduce using rule 34
	'--'           reduce using rule 34
	'bool'         reduce using rule 34
	'double'       reduce using rule 34
	'else'         reduce using rule 34
	'false'        reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'return'       reduce using rule 34
	'true'         reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_integ        reduce using rule 34
	L_doubl        reduce using rule 34
	L_Id           reduce using rule 34
	%eof           reduce using rule 34


State 128

	Stm -> Type Id '=' . Exp ';'                        (rule 35)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'false'        shift, and enter state 33
	'true'         shift, and enter state 34
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 138
	IncDecOp       goto state 62
	BoolLit        goto state 63

State 129

	Stm -> 'if' '(' Exp . ')' Stm 'else' Stm            (rule 39)

	')'            shift, and enter state 137


State 130

	Stm -> 'return' Exp ';' .                           (rule 36)

	'('            reduce using rule 36
	'++'           reduce using rule 36
	'--'           reduce using rule 36
	'bool'         reduce using rule 36
	'double'       reduce using rule 36
	'else'         reduce using rule 36
	'false'        reduce using rule 36
	'if'           reduce using rule 36
	'int'          reduce using rule 36
	'return'       reduce using rule 36
	'true'         reduce using rule 36
	'void'         reduce using rule 36
	'while'        reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	L_integ        reduce using rule 36
	L_doubl        reduce using rule 36
	L_Id           reduce using rule 36
	%eof           reduce using rule 36


State 131

	Stm -> 'while' '(' Exp . ')' Stm                    (rule 37)

	')'            shift, and enter state 136


State 132

	Stm -> '{' ListStm '}' .                            (rule 38)

	'('            reduce using rule 38
	'++'           reduce using rule 38
	'--'           reduce using rule 38
	'bool'         reduce using rule 38
	'double'       reduce using rule 38
	'else'         reduce using rule 38
	'false'        reduce using rule 38
	'if'           reduce using rule 38
	'int'          reduce using rule 38
	'return'       reduce using rule 38
	'true'         reduce using rule 38
	'void'         reduce using rule 38
	'while'        reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	L_integ        reduce using rule 38
	L_doubl        reduce using rule 38
	L_Id           reduce using rule 38
	%eof           reduce using rule 38


State 133

	ListArg -> Arg ',' ListArg .                        (rule 32)

	')'            reduce using rule 32
	%eof           reduce using rule 32


State 134

	Def -> Type Id '(' . ListArg ')' '{' ListStm '}'    (rule 26)

	')'            reduce using rule 30
	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'int'          shift, and enter state 30
	'void'         shift, and enter state 31

	Arg            goto state 83
	ListArg        goto state 135
	Type           goto state 85

State 135

	Def -> Type Id '(' ListArg . ')' '{' ListStm '}'    (rule 26)

	')'            shift, and enter state 143


State 136

	Stm -> 'while' '(' Exp ')' . Stm                    (rule 37)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'false'        shift, and enter state 33
	'if'           shift, and enter state 78
	'int'          shift, and enter state 30
	'return'       shift, and enter state 79
	'true'         shift, and enter state 34
	'void'         shift, and enter state 31
	'while'        shift, and enter state 80
	'{'            shift, and enter state 81
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Stm            goto state 142
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 76
	IncDecOp       goto state 62
	BoolLit        goto state 63
	Type           goto state 77

State 137

	Stm -> 'if' '(' Exp ')' . Stm 'else' Stm            (rule 39)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'false'        shift, and enter state 33
	'if'           shift, and enter state 78
	'int'          shift, and enter state 30
	'return'       shift, and enter state 79
	'true'         shift, and enter state 34
	'void'         shift, and enter state 31
	'while'        shift, and enter state 80
	'{'            shift, and enter state 81
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Stm            goto state 141
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 76
	IncDecOp       goto state 62
	BoolLit        goto state 63
	Type           goto state 77

State 138

	Stm -> Type Id '=' Exp . ';'                        (rule 35)

	';'            shift, and enter state 140


State 139

	Exp6 -> Id '(' ListExp ')' .                        (rule 46)

	'!='           reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46
	%eof           reduce using rule 46


State 140

	Stm -> Type Id '=' Exp ';' .                        (rule 35)

	'('            reduce using rule 35
	'++'           reduce using rule 35
	'--'           reduce using rule 35
	'bool'         reduce using rule 35
	'double'       reduce using rule 35
	'else'         reduce using rule 35
	'false'        reduce using rule 35
	'if'           reduce using rule 35
	'int'          reduce using rule 35
	'return'       reduce using rule 35
	'true'         reduce using rule 35
	'void'         reduce using rule 35
	'while'        reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_integ        reduce using rule 35
	L_doubl        reduce using rule 35
	L_Id           reduce using rule 35
	%eof           reduce using rule 35


State 141

	Stm -> 'if' '(' Exp ')' Stm . 'else' Stm            (rule 39)

	'else'         shift, and enter state 145


State 142

	Stm -> 'while' '(' Exp ')' Stm .                    (rule 37)

	'('            reduce using rule 37
	'++'           reduce using rule 37
	'--'           reduce using rule 37
	'bool'         reduce using rule 37
	'double'       reduce using rule 37
	'else'         reduce using rule 37
	'false'        reduce using rule 37
	'if'           reduce using rule 37
	'int'          reduce using rule 37
	'return'       reduce using rule 37
	'true'         reduce using rule 37
	'void'         reduce using rule 37
	'while'        reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	L_integ        reduce using rule 37
	L_doubl        reduce using rule 37
	L_Id           reduce using rule 37
	%eof           reduce using rule 37


State 143

	Def -> Type Id '(' ListArg ')' . '{' ListStm '}'    (rule 26)

	'{'            shift, and enter state 144


State 144

	Def -> Type Id '(' ListArg ')' '{' . ListStm '}'    (rule 26)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'false'        shift, and enter state 33
	'if'           shift, and enter state 78
	'int'          shift, and enter state 30
	'return'       shift, and enter state 79
	'true'         shift, and enter state 34
	'void'         shift, and enter state 31
	'while'        shift, and enter state 80
	'{'            shift, and enter state 81
	'}'            reduce using rule 40
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Stm            goto state 74
	ListStm        goto state 147
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 76
	IncDecOp       goto state 62
	BoolLit        goto state 63
	Type           goto state 77

State 145

	Stm -> 'if' '(' Exp ')' Stm 'else' . Stm            (rule 39)

	'('            shift, and enter state 64
	'++'           shift, and enter state 49
	'--'           shift, and enter state 50
	'bool'         shift, and enter state 28
	'double'       shift, and enter state 29
	'false'        shift, and enter state 33
	'if'           shift, and enter state 78
	'int'          shift, and enter state 30
	'return'       shift, and enter state 79
	'true'         shift, and enter state 34
	'void'         shift, and enter state 31
	'while'        shift, and enter state 80
	'{'            shift, and enter state 81
	L_integ        shift, and enter state 23
	L_doubl        shift, and enter state 65
	L_Id           shift, and enter state 26

	Integer        goto state 51
	Double         goto state 52
	Id             goto state 53
	Stm            goto state 146
	Exp6           goto state 54
	Exp5           goto state 55
	Exp4           goto state 56
	Exp3           goto state 57
	Exp2           goto state 58
	Exp1           goto state 59
	Exp            goto state 76
	IncDecOp       goto state 62
	BoolLit        goto state 63
	Type           goto state 77

State 146

	Stm -> 'if' '(' Exp ')' Stm 'else' Stm .            (rule 39)

	'('            reduce using rule 39
	'++'           reduce using rule 39
	'--'           reduce using rule 39
	'bool'         reduce using rule 39
	'double'       reduce using rule 39
	'else'         reduce using rule 39
	'false'        reduce using rule 39
	'if'           reduce using rule 39
	'int'          reduce using rule 39
	'return'       reduce using rule 39
	'true'         reduce using rule 39
	'void'         reduce using rule 39
	'while'        reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_integ        reduce using rule 39
	L_doubl        reduce using rule 39
	L_Id           reduce using rule 39
	%eof           reduce using rule 39


State 147

	Def -> Type Id '(' ListArg ')' '{' ListStm . '}'    (rule 26)

	'}'            shift, and enter state 148


State 148

	Def -> Type Id '(' ListArg ')' '{' ListStm '}' .    (rule 26)

	'bool'         reduce using rule 26
	'double'       reduce using rule 26
	'int'          reduce using rule 26
	'void'         reduce using rule 26
	%eof           reduce using rule 26


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 85
Number of terminals: 34
Number of non-terminals: 47
Number of states: 149
